-# format=database

/ _formats/database/_catalog_show.html.haml

- cache("catalog_show_format=database_#{document.cache_key}") do
  - marc = document.to_marc

  -# Per 10/1013 NER/Cataloging decision, eliminate the 969 DB Summary field,
  -# use only the standard MARC 520 full summary, below.
  -# = add_row("DB Summary", document.fetch('database_summary_display', nil))
  -# Redundant with 'Summary', below
  -# = add_row("Details", document.fetch('summary_display', nil))

  = add_row("Author", generate_value_links(display_marc_field(marc, 'author'), :author))
  = add_row("Uniform Title", display_marc_field(marc, 'title_uniform'))
  = add_row("Title", display_marc_field(marc, 'title'))
  = add_row("Edition", display_marc_field(marc, 'edition'))
  = add_row("Published", display_marc_field(marc, 'publish'))
  = add_row("Produced", display_marc_field(marc, 'publish_produce'))
  = add_row("Distributed", display_marc_field(marc, 'publish_distribute'))
  = add_row("Manufactured", display_marc_field(marc, 'publish_manufacture'))
  = add_row("Copyright", display_marc_field(marc, 'publish_copyright'))
  = add_row("Description", display_marc_field(marc, 'description'))

  = add_row("Series", generate_value_links(display_marc_field(marc, 'series'), :series_title))

  = add_row("In", display_marc_field(marc, 'in'))

  = add_row("Subjects", generate_value_links_subject(display_marc_field(marc, 'subject_LC')))
  = add_row("Also Listed Under", generate_value_links(display_marc_field(marc, 'author_other'), :author))
  = add_row("Includes", generate_value_links(display_marc_field(marc, 'contains'), :all))

  = add_row("Summary", display_marc_field(marc, 'summary'))
  = add_row("Contents", display_marc_field(marc, 'contents'))

  -# TITLE BLOCK
  = add_row("Former Title", display_marc_field(marc, 'title_former'))
  = add_row("Other Titles", display_marc_field(marc, 'title_other'))
  = add_row("Distinctive Title", display_marc_field(marc, 'title_distinctive'))
  = add_row("Cover Title", display_marc_field(marc, 'title_cover'))
  = add_row("Added Title Page", display_marc_field(marc, 'title_added'))
  = add_row("Caption Title", display_marc_field(marc, 'title_caption'))
  = add_row("Running Title", display_marc_field(marc, 'title_running'))
  = add_row("Spine Title", display_marc_field(marc, 'title_spine'))

  -# NOTES BLOCK
  = add_row("Access and Use", display_marc_field(marc, 'restrictions'))
  = add_row("Notes", display_marc_field(marc, 'notes'))
  = add_row("Related Materials", display_marc_field(marc, 'related_materials'))
  = add_row("Other Editions:", display_marc_field(marc, 'other_editions'))
  = add_row("Other Information:", display_unlinked_880_field(marc))
  = add_row("Exhibitions", display_marc_field(marc, 'exhibitions'))
  = add_row("Provenance", display_marc_field(marc, 'provenance'))

  = add_row("Credits", display_marc_field(marc, 'credits'))
  = add_row("Reproduction Note", display_marc_field(marc, 'reproduction_note'))
  = add_row("Cite As", display_marc_field(marc, 'cite_as'))
  = add_row("Language", document["language_facet"], options = {:join => '; '})
  = add_row("Language Note", display_marc_field(marc, 'language'))
  = add_row("References", display_marc_field(marc, 'references'))

  = add_row("LCCN", display_marc_field(marc, 'LCCN'))
  = add_row("Publisher No.", display_marc_field(marc, 'publisher_no'))
  = add_row("ISBN", display_marc_field(marc, 'ISBN'))
  = add_row("ISSN", display_marc_field(marc, 'ISSN'))
  = add_row("Standard No.", display_marc_field(marc, 'standard_no'))
  = add_row('Related To', display_marc_field(marc, 'related_to'))
  = add_row('Format', formats_with_icons(document))
  = add_row('Acquired On', Date.parse(document.fetch('acq_dt', nil)).to_formatted_s(:long)) if document.fetch('acq_dt', nil)

  -#  The database note/alert display is moved to holdings partial
  -# - if document.fetch('_item_alerts', nil).kind_of?(Hash)
  -#  - document.fetch('_item_alerts', nil).each do |alert_type, alerts|
  -#    = add_row(ItemAlert::ALERT_TYPES[alert_type], alerts.select { |alert| alert.active? }.collect(&:message), options = {:html_safe => true})
  -# html_safe true, so that ERC can embed HTML links in their alert msgs

