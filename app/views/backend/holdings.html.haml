
-# - add_display_elements(@holdings['condensed_holdings_full']).listify.reject { |x| x['location_name'].to_s.strip == "Online"}.each do |entry|

-# Each 'entry' is one location (e.g., 'Avery', or 'Online')
- add_display_elements(@holdings['condensed_holdings_full']).listify.each do |entry|

  -# IF this is an Online, but there is no Holdings-level URL, skip this entry
  - next if holdings_online_without_url?(entry)

  .holding{:class => alternating_line}
    .location_box
      .location
        = entry['location_link']
      - if entry['hours']
        .hours
          %span.holdings_label Today's Hours: 
          = entry['hours']

      .location_notes
        -# Include location-notes, if any
        -# They may be simple strings, or a link (hash with keys "text" and "url")
        - entry['location_note'] && Array.wrap(entry['location_note']).each do |note|
          .location_note
            - if note.is_a? String
              = note
            - if note.is_a? Hash
              - if note["text"] && note["url"]
                = link_to note["text"], note["url"]
              - elsif note["text"]
                = note["text"]

    - if entry['call_number'].length > 0
      .call_number
        %span.holdings_label Call Number: 
        = entry['call_number']
    -# Each 'copy' is a group of 1-or-more equivalent items (same call num, etc.)
    - entry['copies'].each do |copy|
      .group
        -# If there are any temp locations for this item, print them out
        - unless copy['temp_locations'].nil?
          - copy['temp_locations'].each do |t|
            .message= t
        -# If there are any special notes, print them out
        - ['orders', 'summary_holdings', 'supplements', 'indexes', 'notes',
	       'reproduction_note', 'current_issues'].each do |type|
          - unless copy[type].nil?
            - message = copy[type]
            -# NEXT-1009 -Multiple 866 fields in the holding records
            -# CLIO Backend will join multiple fields with this delimeter
            - message = message.gsub(/ -- /, '<br/>').html_safe
            .message=  message

        -# Different 'items' with a 'copy' have varying statuses (Available, In-Transit, etc.)
        - copy['items'].each do |item|
          .status
            - message, details = item
            - unless message =~ /^Status unknown/
              = details['image_link']
              = message
              - if details['count'] >1
                (#{details['count']} copies)

      = render 'donor_info', copy: copy

      -# Different 'urls' with a 'copy' have different details...
      - copy['urls'] && copy['urls'].each do |url_details|
        .url_link
          = image_tag "icons/online.png"
          = link_to url_details["link_text"], url_details["url"]

    - unless (svc_links = service_links(entry['services'], @id)).empty?
      .services
        %span.holdings_label= "#{'Request'.pluralize(svc_links.size)}: "
        - svc_links.each do |link|
          .service= link
